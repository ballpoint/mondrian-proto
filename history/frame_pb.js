/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var history_action_pb = require('../history/action_pb.js');
goog.exportSymbol('proto.ProtobufHistory.HistoryFrame', null, global);
goog.exportSymbol('proto.ProtobufHistory.HistoryFrameLabel', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtobufHistory.HistoryFrame = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ProtobufHistory.HistoryFrame.repeatedFields_, null);
};
goog.inherits(proto.ProtobufHistory.HistoryFrame, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ProtobufHistory.HistoryFrame.displayName = 'proto.ProtobufHistory.HistoryFrame';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ProtobufHistory.HistoryFrame.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtobufHistory.HistoryFrame.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtobufHistory.HistoryFrame.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtobufHistory.HistoryFrame} msg The msg instance to transform.
 * @return {!Object}
 */
proto.ProtobufHistory.HistoryFrame.toObject = function(includeInstance, msg) {
  var f, obj = {
    depth: msg.getDepth(),
    timestamp: msg.getTimestamp(),
    label: msg.getLabel(),
    nextList: jspb.Message.toObjectList(msg.getNextList(),
    proto.ProtobufHistory.HistoryFrame.toObject, includeInstance),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    history_action_pb.DocAction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.ProtobufHistory.HistoryFrame} The clone.
 */
proto.ProtobufHistory.HistoryFrame.prototype.cloneMessage = function() {
  return /** @type {!proto.ProtobufHistory.HistoryFrame} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint64 depth = 1;
 * @return {number}
 */
proto.ProtobufHistory.HistoryFrame.prototype.getDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.ProtobufHistory.HistoryFrame.prototype.setDepth = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 timestamp = 2;
 * @return {number}
 */
proto.ProtobufHistory.HistoryFrame.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.ProtobufHistory.HistoryFrame.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional HistoryFrameLabel label = 3;
 * @return {!proto.ProtobufHistory.HistoryFrameLabel}
 */
proto.ProtobufHistory.HistoryFrame.prototype.getLabel = function() {
  return /** @type {!proto.ProtobufHistory.HistoryFrameLabel} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {!proto.ProtobufHistory.HistoryFrameLabel} value  */
proto.ProtobufHistory.HistoryFrame.prototype.setLabel = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated HistoryFrame next = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.ProtobufHistory.HistoryFrame>}
 */
proto.ProtobufHistory.HistoryFrame.prototype.getNextList = function() {
  return /** @type{!Array.<!proto.ProtobufHistory.HistoryFrame>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ProtobufHistory.HistoryFrame, 4));
};


/** @param {Array.<!proto.ProtobufHistory.HistoryFrame>} value  */
proto.ProtobufHistory.HistoryFrame.prototype.setNextList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.ProtobufHistory.HistoryFrame.prototype.clearNextList = function() {
  this.setNextList([]);
};


/**
 * repeated DocAction actions = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.ProtobufHistory.DocAction>}
 */
proto.ProtobufHistory.HistoryFrame.prototype.getActionsList = function() {
  return /** @type{!Array.<!proto.ProtobufHistory.DocAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, history_action_pb.DocAction, 5));
};


/** @param {Array.<!proto.ProtobufHistory.DocAction>} value  */
proto.ProtobufHistory.HistoryFrame.prototype.setActionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


proto.ProtobufHistory.HistoryFrame.prototype.clearActionsList = function() {
  this.setActionsList([]);
};


/**
 * @enum {number}
 */
proto.ProtobufHistory.HistoryFrameLabel = {
  DEFAULT: 0,
  BOOLEAN_UNITE: 1,
  BOOLEAN_SUBTRACT: 2,
  BOOLEAN_INTERSECT: 3,
  ADD_POINT: 4,
  REMOVE_POINT: 5
};

goog.object.extend(exports, proto.ProtobufHistory);
