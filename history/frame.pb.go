// Code generated by protoc-gen-go.
// source: history/frame.proto
// DO NOT EDIT!

package history

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// We serialize all of the potential frame labels
// as ints to save space and allow for future i18n
type HistoryFrameLabel int32

const (
	HistoryFrameLabel_DEFAULT HistoryFrameLabel = 0
	// Boolean operations
	HistoryFrameLabel_BOOLEAN_UNITE     HistoryFrameLabel = 1
	HistoryFrameLabel_BOOLEAN_SUBTRACT  HistoryFrameLabel = 2
	HistoryFrameLabel_BOOLEAN_INTERSECT HistoryFrameLabel = 3
	// Pen operations
	HistoryFrameLabel_ADD_POINT    HistoryFrameLabel = 4
	HistoryFrameLabel_REMOVE_POINT HistoryFrameLabel = 5
)

var HistoryFrameLabel_name = map[int32]string{
	0: "DEFAULT",
	1: "BOOLEAN_UNITE",
	2: "BOOLEAN_SUBTRACT",
	3: "BOOLEAN_INTERSECT",
	4: "ADD_POINT",
	5: "REMOVE_POINT",
}
var HistoryFrameLabel_value = map[string]int32{
	"DEFAULT":           0,
	"BOOLEAN_UNITE":     1,
	"BOOLEAN_SUBTRACT":  2,
	"BOOLEAN_INTERSECT": 3,
	"ADD_POINT":         4,
	"REMOVE_POINT":      5,
}

func (x HistoryFrameLabel) String() string {
	return proto.EnumName(HistoryFrameLabel_name, int32(x))
}
func (HistoryFrameLabel) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type HistoryFrame struct {
	Depth     uint64            `protobuf:"varint,1,opt,name=depth" json:"depth,omitempty"`
	Timestamp int64             `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Label     HistoryFrameLabel `protobuf:"varint,3,opt,name=label,enum=history.HistoryFrameLabel" json:"label,omitempty"`
	// Linked list
	Next    []*HistoryFrame `protobuf:"bytes,4,rep,name=next" json:"next,omitempty"`
	Actions []*DocAction    `protobuf:"bytes,5,rep,name=actions" json:"actions,omitempty"`
}

func (m *HistoryFrame) Reset()                    { *m = HistoryFrame{} }
func (m *HistoryFrame) String() string            { return proto.CompactTextString(m) }
func (*HistoryFrame) ProtoMessage()               {}
func (*HistoryFrame) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *HistoryFrame) GetDepth() uint64 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *HistoryFrame) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *HistoryFrame) GetLabel() HistoryFrameLabel {
	if m != nil {
		return m.Label
	}
	return HistoryFrameLabel_DEFAULT
}

func (m *HistoryFrame) GetNext() []*HistoryFrame {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *HistoryFrame) GetActions() []*DocAction {
	if m != nil {
		return m.Actions
	}
	return nil
}

func init() {
	proto.RegisterType((*HistoryFrame)(nil), "history.HistoryFrame")
	proto.RegisterEnum("history.HistoryFrameLabel", HistoryFrameLabel_name, HistoryFrameLabel_value)
}

func init() { proto.RegisterFile("history/frame.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x90, 0xd1, 0x4b, 0xc2, 0x40,
	0x18, 0xc0, 0x3b, 0xb7, 0x25, 0x7e, 0x6a, 0x9d, 0x5f, 0x06, 0x43, 0x0a, 0x86, 0x4f, 0xa3, 0x07,
	0x23, 0xeb, 0xa1, 0xd7, 0xe9, 0x4e, 0x12, 0x6c, 0x93, 0xf3, 0xec, 0x55, 0x36, 0x9b, 0x38, 0x70,
	0x6e, 0x6c, 0x17, 0xd4, 0x63, 0x7f, 0x6c, 0xff, 0x47, 0x6c, 0x73, 0x14, 0x09, 0x3d, 0x1d, 0xf7,
	0xbb, 0xdf, 0x8f, 0xef, 0xee, 0xe0, 0x62, 0x1b, 0x66, 0x32, 0x4e, 0x3f, 0x6e, 0x37, 0xa9, 0x17,
	0x05, 0x83, 0x24, 0x8d, 0x65, 0x8c, 0xe7, 0xf3, 0x7c, 0xf1, 0xdf, 0x36, 0x4f, 0xe5, 0x61, 0xaf,
	0x5b, 0x59, 0xde, 0x5a, 0x86, 0xf1, 0xbe, 0xd4, 0xfa, 0x5f, 0x04, 0x5a, 0x07, 0x63, 0x92, 0xd7,
	0xd8, 0x05, 0xed, 0x35, 0x48, 0xe4, 0x56, 0x27, 0x06, 0x31, 0x55, 0x5e, 0x6e, 0xf0, 0x0a, 0x1a,
	0x32, 0x8c, 0x82, 0x4c, 0x7a, 0x51, 0xa2, 0xd7, 0x0c, 0x62, 0x2a, 0xfc, 0x07, 0xe0, 0x23, 0x68,
	0x3b, 0xcf, 0x0f, 0x76, 0xba, 0x62, 0x10, 0xf3, 0x6c, 0xd8, 0x1f, 0xfc, 0x99, 0x3d, 0xf8, 0x3d,
	0x61, 0x96, 0x9b, 0xbc, 0x0c, 0xf0, 0x0e, 0xd4, 0x7d, 0xf0, 0x2e, 0x75, 0xd5, 0x50, 0xcc, 0xe6,
	0xf0, 0xfa, 0xdf, 0x90, 0x17, 0x2a, 0x3e, 0x40, 0xbd, 0x7c, 0x41, 0xa6, 0x6b, 0x45, 0xd5, 0x3b,
	0xaa, 0xec, 0x78, 0x6d, 0x15, 0x0a, 0xaf, 0xd4, 0x9b, 0x4f, 0x02, 0x9d, 0xa3, 0x5b, 0x60, 0x13,
	0xea, 0x36, 0x9b, 0x58, 0xcb, 0x99, 0xa0, 0x27, 0xd8, 0x81, 0xf6, 0xc8, 0x75, 0x67, 0xcc, 0x72,
	0x56, 0x4b, 0x67, 0x2a, 0x18, 0x25, 0xd8, 0x05, 0x5a, 0xa1, 0xc5, 0x72, 0x24, 0xb8, 0x35, 0x16,
	0xb4, 0x86, 0x97, 0xd0, 0xa9, 0xe8, 0xd4, 0x11, 0x8c, 0x2f, 0xd8, 0x58, 0x50, 0x05, 0xdb, 0xd0,
	0xb0, 0x6c, 0x7b, 0x35, 0x77, 0xa7, 0x8e, 0xa0, 0x2a, 0x52, 0x68, 0x71, 0xf6, 0xec, 0xbe, 0xb0,
	0x03, 0xd1, 0xfc, 0xd3, 0xe2, 0xcb, 0xef, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x83, 0x8c,
	0x35, 0xb0, 0x01, 0x00, 0x00,
}
